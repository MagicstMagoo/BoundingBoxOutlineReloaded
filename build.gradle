buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'Fabric'
            url = 'https://maven.fabricmc.net/'
        }
        maven {
            name = 'Cotton'
            url = 'https://server.bbkr.space/artifactory/libs-release/'
        }
    }
    dependencies {
        classpath "net.fabricmc:fabric-loom:0.12-SNAPSHOT"
        classpath "io.github.juuxel:loom-quiltflower:1.+"
    }
}

apply plugin: 'fabric-loom'
apply plugin: 'io.github.juuxel.loom-quiltflower'
apply plugin: 'java'
apply plugin: 'idea'

group 'com.irtimaled'
version project.buildVersion + '-' + project.minecraft_version
archivesBaseName = 'BBOutlineReloaded'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    it.options.release = 17
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    include modImplementation(fabricApi.module("fabric-resource-loader-v0", "0.58.5+1.19.1"))
}

loom {
    accessWidenerPath = file("src/main/resources/bbor.accesswidener")
}

processResources {
    filesMatching('fabric.mod.json') {
        expand version: project.version
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withSourcesJar()
}

jar {
    manifest {
        attributes([
                "Main-Class": "com.irtimaled.bbor.Main",
                "Specification-Title": "bbor",
                "Specification-Vendor": "Irtimaled",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor": "Irtimaled",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

afterEvaluate {
    remapJar.classifier = 'fabric'
}

afterEvaluate {
    migrateMappings.configure {
        outputDir = project.file("src/main/java")
    }
}
